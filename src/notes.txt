

animate card to card then animate card to hand


on animation done callback


useAnimationQueue
- get state from hook or?

useQueuedState(ID:string)




action:drawStartHand
	action:draw
	action:draw
	action:draw


- hand
  - card
  - card
  - card
  - card
  
  
  - DrawCard
    - If queue execution is in effect, then add to queue
	- component animation done dispatch ANIMATION_DONE, which triggers next action in queue
	  - this could allow for easy action injection, if card have effect that need to trigger before anything else.
	  
	  
	  
https://redux-loop.js.org/docs/recipes/ActionQueue.html
https://redux.js.org/advanced/middleware
https://medium.com/@jtbennett/asynchronous-actions-in-redux-8412cf92a26f

https://www.keycdn.com/blog/functional-programming



transtionGroup
- transition
  - onEnter
    - animateCardDraw
  - onExit
    - animateCardOut






- non blocking actions / blocking actions
  - flow / channels



  START_GAME => BEGIN_GAME => NEW_ROUND => PLAY => END_ROUND
                              DRAW_HAND
                              DRAW => DRAW => DRAW
                              PARSE   PARSE   PARSE
                              EFFECT => EFFECT






SAGA:
middleware::QUEUE_ACTION(DRAW)
- no queue in actionChannel
- call actionHandler which puts action(DRAW) 
- actionHandler take(DRAW_DONE)
- actionHandler put(QUEUE_ACTION_DONE) or maybe nothing?
middleware::QUEUE_ACTION(DRAW)
- Set in queue in actionChannel
middleware::QUEUE_ACTION(DRAW)
- Set in queue in actionChannel



- DRAW_CARD
  - PRESENT_TOP_CARD
    - PARSE_EFFECT
      - ADD_TO_HAND




- DRAW_CARD
  - QUEUE::REVEAL_TOP_CARD
    - handleAction - wait for REVEAL_TOP_CARD_DONE
  - QUEUE::PARSE_CARD_EFFECTS
    - handleAction - wait for PARSE_CARD_EFFECTS_DONE
  - QUEUE::ADD_CARD_TO_HAND
    - handleAction - wait for ADD_CARD_TO_HAND_DONE




 no base actions are queued. Only derived actions from sagas are.



 recursive (generic watch functions)
 - PARSE_CARD_EFFECTS
   - QUEUE the right actions, which in themselves queue actions instantly